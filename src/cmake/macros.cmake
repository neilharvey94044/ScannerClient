
MACRO(print_compiler_info)
    message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
    message(STATUS "C++ Compiler flags: ${CMAKE_CXX_FLAGS}")
    message(STATUS "C Compiler flags: ${CMAKE_C_FLAGS}")

    if(CMAKE_BUILD_TYPE STREQUAL "Release")
        message(STATUS "C++ flags, Release configuration: ${CMAKE_CXX_FLAGS_RELEASE}")
        message(STATUS "C flags, Release configuration: ${CMAKE_C_FLAGS_RELEASE}")
    elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
        message(STATUS "C++ flags, Release configuration with Debug info: ${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
        message(STATUS "C flags, Release configuration with Debug info: ${CMAKE_C_FLAGS_RELWITHDEBINFO}")
    elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
        message(STATUS "C flags, Debug configuration: ${CMAKE_C_FLAGS_DEBUG}")
        message(STATUS "C++ flags, Debug configuration: ${CMAKE_CXX_FLAGS_DEBUG}")
    elseif(CMAKE_BUILD_TYPE STREQUAL "MinSizeRel")
        message(STATUS "C flags, minimal Release configuration: ${CMAKE_C_FLAGS_MINSIZEREL}")
        message(STATUS "C++ flags, minimal Release configuration: ${CMAKE_CXX_FLAGS_MINSIZEREL}")
    endif()

ENDMACRO(print_compiler_info)

MACRO(print_environment_info)
    if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    message(STATUS "Configuring on/for Linux")
    elseif(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    message(STATUS "Configuring on/for macOS")
    elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    message(STATUS "Configuring on/for Windows")
    else()
    message(STATUS "Configuring on/for ${CMAKE_SYSTEM_NAME}")
    endif()
ENDMACRO(print_environment_info)